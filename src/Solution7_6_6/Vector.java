package Solution7_6_6;
/*
Напишите абстрактный класс Vector. У него должны быть:

целочисленные переменные x1, y1, z1, x2, y2, z2 — координаты начала и конца вектора;
конструктор, который принимает эти параметры (x1, y1, z1, x2, y2, z2);
абстрактный метод getLength(), возвращающий вещественное (double) число — длину вектора;
абстрактный метод getVectorCords(), возвращающий строку (координаты через пробел, например: 2, 0, -1).
Напишите класс Vector2D, который является наследником класса Vector. В нем должно быть:

конструктор, принимающий параметры x1, y1, x2, y2 (z1 и z2 равны 0);
метод getLength(), возвращающий длину вектора (double);
метод getVectorCords(), возвращающий строку (координаты вектора через пробел);
метод getscalarProduct(Vector2D vector) (скалярное произведение), возвращающий скалярное произведение векторов (вещественное (double) число);
метод getAngle(Vector 2D vector), возвращающий вещественное значение — косинус угла (в радианах) между векторами, если они не нулевые, иначе метод должен вернуть -2.0.
Напишите класс Vector3D, который является наследником класса Vector. В нем должно быть:

конструктор, принимающий параметры x1, y1, z1, x2, y2, z2;
метод getLength(), возвращающий длину вектора (double);
метод getVectorCords(), возвращающий строку (координаты вектора через пробел);
метод scalarProduct(Vector3D vector) (скалярное произведение), возвращающий скалярное произведение векторов (вещественное (double) число).
 */

abstract public class Vector {
    int x1, y1, z1, x2, y2, z2;

    public Vector(int x1, int y1, int z1, int x2, int y2, int z2) {
        this.x1 = x1;
        this.y1 = y1;
        this.z1 = z1;
        this.x2 = x2;
        this.y2 = y2;
        this.z2 = z2;
    }

    public abstract double getLength();

    public  abstract String getVectorCords();
}
